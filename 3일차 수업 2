#농어의 길이로부터 무게 예측하는 K-NN 회귀 모델 만들기

import csv

f = open('Fish.csv', 'r')
data = csv.reader(f)

h = next(data)

perch_weight = []
perch_length = []

for row in data:
    if row[0] == 'Perch':
        perch_weight.append(float(row[1]))
        perch_length.append(float(row[3]))
                      
                            
print('무게: ', perch_weight)
print('길이: ', perch_length)
                            
                            
                            
                            
                            
                           
 import numpy as np

weight = np.array( perch_weight )
length = np.array( perch_length )





import matplotlib.pyplot as plt

plt.scatter( length, weight )
plt.xlabel('length [cm]')
plt.ylabel('weight [g]')
plt.grid( True )
plt.show()





#학습용 데이터, 시험용 데이터 준비하기

from sklearn.model_selection import train_test_split

train_input, test_input, train_target, test_target = train_test_split(length, weight, random_state = 42)











print(train_input.shape, train_target.shape)
print(train_input.shape, train_target.shape)







arr = np.array([1,2, 3, 4])
print(arr)
print(arr.shape)
arr2 = arr.reshape(2, 2)
print(arr2)







train_input = train_input.reshape(-1, 1)
test_input = test_input.reshape(-1, 1)

#print(train_input.shape)
#print(test_input.shape) 

print(train_input[0:5])





from sklearn.neighbors import KNeighborsRegressor

model = KNeighborsRegressor()

model.fit(train_input, train_target)

result = model.score(test_input, test_target)

print(result) # 정확도 X, 결정계수 0 







test_prediction = model.predict(test_input)
print(test_prediction)






print(test_target )








# 예측값과 정답값 사이의 오차(오류)를 계사하는 방법
# MAE (Mean Absolute Error): 평균 절댓값 오차
# (60. - 5.9) = /+54.1 / = 54.1 <--- 절댓값 오차
# (79.6 - 100.) = /-20.4/ = 20.4 <--- 절댓값 오차

from sklearn.metrics import mean_absolute_error

mean_absolute_error(test_target, test_prediction) #정답, 예측값
print(result) # 이 모델은 예측값에 약 19g의 오차를 갖는 모델이다.
